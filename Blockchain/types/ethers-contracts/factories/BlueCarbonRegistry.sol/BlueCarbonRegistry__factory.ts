/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { BlueCarbonRegistry, BlueCarbonRegistryInterface } from "../../BlueCarbonRegistry.sol/BlueCarbonRegistry.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "orgId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "walletAddress",
        "type": "address"
      }
    ],
    "name": "OrganizationRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "orgId",
        "type": "uint256"
      }
    ],
    "name": "OrganizationVerified",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "projectId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "orgId",
        "type": "uint256"
      }
    ],
    "name": "ProjectRegistered",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "admin",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nextOrgId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nextProjectId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "organizations",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "internalType": "enum BlueCarbonRegistry.OrganizationType",
        "name": "orgType",
        "type": "uint8"
      },
      {
        "internalType": "address",
        "name": "walletAddress",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "isVerified",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "projects",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "orgId",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "location",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "projectArea",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "ipfsHash",
        "type": "string"
      },
      {
        "internalType": "enum BlueCarbonRegistry.ProjectStatus",
        "name": "status",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_name",
        "type": "string"
      },
      {
        "internalType": "enum BlueCarbonRegistry.OrganizationType",
        "name": "_orgType",
        "type": "uint8"
      },
      {
        "internalType": "address",
        "name": "_walletAddress",
        "type": "address"
      }
    ],
    "name": "registerOrganization",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_name",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_orgId",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_location",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_projectArea",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_ipfsHash",
        "type": "string"
      }
    ],
    "name": "registerProject",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_projectId",
        "type": "uint256"
      },
      {
        "internalType": "enum BlueCarbonRegistry.ProjectStatus",
        "name": "_status",
        "type": "uint8"
      }
    ],
    "name": "updateProjectStatus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_orgId",
        "type": "uint256"
      }
    ],
    "name": "verifyOrganization",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052600160035560016004553480156018575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611726806100655f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063d11d498b11610064578063d11d498b14610121578063d46bd7d41461013d578063e792dd8a14610159578063e935b7b11461018d578063f851a440146101ab57610091565b8063107046bd146100955780634f14230b146100cb57806368a73b33146100e75780638a5f067c14610103575b5f5ffd5b6100af60048036038101906100aa9190610b27565b6101c9565b6040516100c29796959493929190610c44565b60405180910390f35b6100e560048036038101906100e09190610b27565b6103a5565b005b61010160048036038101906100fc9190610df2565b6104e4565b005b61010b61072b565b6040516101189190610ebd565b60405180910390f35b61013b60048036038101906101369190610ef9565b610731565b005b61015760048036038101906101529190610fb4565b610853565b005b610173600480360381019061016e9190610b27565b6109c8565b60405161018495949392919061108f565b60405180910390f35b610195610ab9565b6040516101a29190610ebd565b60405180910390f35b6101b3610abf565b6040516101c091906110e7565b60405180910390f35b6002602052805f5260405f205f91509050805f0154908060010180546101ee9061112d565b80601f016020809104026020016040519081016040528092919081815260200182805461021a9061112d565b80156102655780601f1061023c57610100808354040283529160200191610265565b820191905f5260205f20905b81548152906001019060200180831161024857829003601f168201915b5050505050908060020154908060030180546102809061112d565b80601f01602080910402602001604051908101604052809291908181526020018280546102ac9061112d565b80156102f75780601f106102ce576101008083540402835291602001916102f7565b820191905f5260205f20905b8154815290600101906020018083116102da57829003601f168201915b5050505050908060040154908060050180546103129061112d565b80601f016020809104026020016040519081016040528092919081815260200182805461033e9061112d565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b505050505090806006015f9054906101000a900460ff16905087565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a906111cd565b60405180910390fd5b5f60015f8381526020019081526020015f205f015403610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611235565b60405180910390fd5b6001805f8381526020019081526020015f2060020160156101000a81548160ff021916908315150217905550807f594f233bc26638f45440ae6ff1da1e5c437c06636654a8f0a7e3f99461a17f7360405160405180910390a250565b60015f8581526020019081526020015f2060020160159054906101000a900460ff16610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c9061129d565b60405180910390fd5b60015f8581526020019081526020015f2060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de9061132b565b60405180910390fd5b6040518060e0016040528060045481526020018681526020018581526020018481526020018381526020018281526020015f600281111561062b5761062a610bd1565b5b81525060025f60045481526020019081526020015f205f820151815f0155602082015181600101908161065e91906114e9565b5060408201518160020155606082015181600301908161067e91906114e9565b506080820151816004015560a082015181600501908161069e91906114e9565b5060c0820151816006015f6101000a81548160ff021916908360028111156106c9576106c8610bd1565b5b02179055509050506004547fc96f671035a5983839cbfb06e1101248d929c6a6cd8b317b233689c7ada2976186866040516107059291906115b8565b60405180910390a260045f81548092919061071f90611613565b91905055505050505050565b60035481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906111cd565b60405180910390fd5b5f60025f8481526020019081526020015f205f015403610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b906116a4565b60405180910390fd5b8060025f8481526020019081526020015f206006015f6101000a81548160ff0219169083600281111561084a57610849610bd1565b5b02179055505050565b6040518060a00160405280600354815260200184815260200183600181111561087f5761087e610bd1565b5b81526020018273ffffffffffffffffffffffffffffffffffffffff1681526020015f151581525060015f60035481526020019081526020015f205f820151815f015560208201518160010190816108d691906114e9565b506040820151816002015f6101000a81548160ff0219169083600181111561090157610900610bd1565b5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160020160156101000a81548160ff0219169083151502179055509050506003547ff21c1266667fb9c045a84d540c46c1533a11dc2ad5714ea93332521e5d9d07fd84836040516109a49291906116c2565b60405180910390a260035f8154809291906109be90611613565b9190505550505050565b6001602052805f5260405f205f91509050805f0154908060010180546109ed9061112d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a199061112d565b8015610a645780601f10610a3b57610100808354040283529160200191610a64565b820191905f5260205f20905b815481529060010190602001808311610a4757829003601f168201915b505050505090806002015f9054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160159054906101000a900460ff16905085565b60045481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b610b0681610af4565b8114610b10575f5ffd5b50565b5f81359050610b2181610afd565b92915050565b5f60208284031215610b3c57610b3b610aec565b5b5f610b4984828501610b13565b91505092915050565b610b5b81610af4565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ba382610b61565b610bad8185610b6b565b9350610bbd818560208601610b7b565b610bc681610b89565b840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110610c0f57610c0e610bd1565b5b50565b5f819050610c1f82610bfe565b919050565b5f610c2e82610c12565b9050919050565b610c3e81610c24565b82525050565b5f60e082019050610c575f83018a610b52565b8181036020830152610c698189610b99565b9050610c786040830188610b52565b8181036060830152610c8a8187610b99565b9050610c996080830186610b52565b81810360a0830152610cab8185610b99565b9050610cba60c0830184610c35565b98975050505050505050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610d0482610b89565b810181811067ffffffffffffffff82111715610d2357610d22610cce565b5b80604052505050565b5f610d35610ae3565b9050610d418282610cfb565b919050565b5f67ffffffffffffffff821115610d6057610d5f610cce565b5b610d6982610b89565b9050602081019050919050565b828183375f83830152505050565b5f610d96610d9184610d46565b610d2c565b905082815260208101848484011115610db257610db1610cca565b5b610dbd848285610d76565b509392505050565b5f82601f830112610dd957610dd8610cc6565b5b8135610de9848260208601610d84565b91505092915050565b5f5f5f5f5f60a08688031215610e0b57610e0a610aec565b5b5f86013567ffffffffffffffff811115610e2857610e27610af0565b5b610e3488828901610dc5565b9550506020610e4588828901610b13565b945050604086013567ffffffffffffffff811115610e6657610e65610af0565b5b610e7288828901610dc5565b9350506060610e8388828901610b13565b925050608086013567ffffffffffffffff811115610ea457610ea3610af0565b5b610eb088828901610dc5565b9150509295509295909350565b5f602082019050610ed05f830184610b52565b92915050565b60038110610ee2575f5ffd5b50565b5f81359050610ef381610ed6565b92915050565b5f5f60408385031215610f0f57610f0e610aec565b5b5f610f1c85828601610b13565b9250506020610f2d85828601610ee5565b9150509250929050565b60028110610f43575f5ffd5b50565b5f81359050610f5481610f37565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f8382610f5a565b9050919050565b610f9381610f79565b8114610f9d575f5ffd5b50565b5f81359050610fae81610f8a565b92915050565b5f5f5f60608486031215610fcb57610fca610aec565b5b5f84013567ffffffffffffffff811115610fe857610fe7610af0565b5b610ff486828701610dc5565b935050602061100586828701610f46565b925050604061101686828701610fa0565b9150509250925092565b6002811061103157611030610bd1565b5b50565b5f81905061104182611020565b919050565b5f61105082611034565b9050919050565b61106081611046565b82525050565b61106f81610f79565b82525050565b5f8115159050919050565b61108981611075565b82525050565b5f60a0820190506110a25f830188610b52565b81810360208301526110b48187610b99565b90506110c36040830186611057565b6110d06060830185611066565b6110dd6080830184611080565b9695505050505050565b5f6020820190506110fa5f830184611066565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061114457607f821691505b60208210810361115757611156611100565b5b50919050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6111b7602183610b6b565b91506111c28261115d565b604082019050919050565b5f6020820190508181035f8301526111e4816111ab565b9050919050565b7f4f7267616e697a6174696f6e20646f6573206e6f7420657869737400000000005f82015250565b5f61121f601b83610b6b565b915061122a826111eb565b602082019050919050565b5f6020820190508181035f83015261124c81611213565b9050919050565b7f4f7267616e697a6174696f6e206973206e6f74207665726966696564000000005f82015250565b5f611287601c83610b6b565b915061129282611253565b602082019050919050565b5f6020820190508181035f8301526112b48161127b565b9050919050565b7f4f6e6c7920746865206f7267616e697a6174696f6e2063616e207265676973745f8201527f65722070726f6a65637473000000000000000000000000000000000000000000602082015250565b5f611315602b83610b6b565b9150611320826112bb565b604082019050919050565b5f6020820190508181035f83015261134281611309565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026113a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261136a565b6113af868361136a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6113ea6113e56113e084610af4565b6113c7565b610af4565b9050919050565b5f819050919050565b611403836113d0565b61141761140f826113f1565b848454611376565b825550505050565b5f5f905090565b61142e61141f565b6114398184846113fa565b505050565b5b8181101561145c576114515f82611426565b60018101905061143f565b5050565b601f8211156114a15761147281611349565b61147b8461135b565b8101602085101561148a578190505b61149e6114968561135b565b83018261143e565b50505b505050565b5f82821c905092915050565b5f6114c15f19846008026114a6565b1980831691505092915050565b5f6114d983836114b2565b9150826002028217905092915050565b6114f282610b61565b67ffffffffffffffff81111561150b5761150a610cce565b5b611515825461112d565b611520828285611460565b5f60209050601f831160018114611551575f841561153f578287015190505b61154985826114ce565b8655506115b0565b601f19841661155f86611349565b5f5b8281101561158657848901518255600182019150602085019450602081019050611561565b868310156115a3578489015161159f601f8916826114b2565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f8301526115d08185610b99565b90506115df6020830184610b52565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61161d82610af4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361164f5761164e6115e6565b5b600182019050919050565b7f50726f6a65637420646f6573206e6f74206578697374000000000000000000005f82015250565b5f61168e601683610b6b565b91506116998261165a565b602082019050919050565b5f6020820190508181035f8301526116bb81611682565b9050919050565b5f6040820190508181035f8301526116da8185610b99565b90506116e96020830184611066565b939250505056fea26469706673582212202ffce7fb53cab1706fd46b2f43d2807d750ee9d0faa30cffae6dd68c5b4e414264736f6c634300081c0033";

  
      type BlueCarbonRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: BlueCarbonRegistryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class BlueCarbonRegistry__factory extends ContractFactory {
    
      constructor(...args: BlueCarbonRegistryConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<BlueCarbonRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): BlueCarbonRegistry__factory {
      return super.connect(runner) as BlueCarbonRegistry__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): BlueCarbonRegistryInterface {
      return new Interface(_abi) as BlueCarbonRegistryInterface;
    }
    
    override attach(address: string | Addressable): BlueCarbonRegistry {
      return super.attach(address) as BlueCarbonRegistry;
    }
  static connect(address: string, runner?: ContractRunner | null): BlueCarbonRegistry {
      return new Contract(address, _abi, runner) as unknown as BlueCarbonRegistry;
    }
  }

  
  